import cv2

#OPEN CV
#image used: https://images.pexels.com/photos/209296/pexels-photo-209296.jpeg?cs=srgb&dl=architecture-building-buy-209296.jpg&fm=jpg
img = cv2.imread('house_pic.jpg')
cv2.imshow('image',img)

#converts it to gray scale
img_gray = cv2.cvtColor(img,cv2.COLOR_RGB2GRAY)
cv2.imshow('image2',img_gray)

#use cv.canny
img_edge = cv2.Canny(img_gray,100,200)
cv2.imshow('image3', img_edge)

#use haar cascade for face detection   Source: https://www.geeksforgeeks.org/face-detection-using-cascade-classifier-using-opencv-python/
img_friends = cv2.imread('friends3.JPG')
#first make it gray scale 
img_friends_gray = cv2.cvtColor(img_friends,cv2.COLOR_RGB2GRAY)

#downloads the classifier
haar_cascade = cv2.CascadeClassifier('haarcascade_frontalface_default.xml') 

#scalefactor and minNeighbors are paramaters for detecting faces
#scale factor is how large the detectionspace changes overtime
#minneighbors will reduce false positives
faces_rect = haar_cascade.detectMultiScale(img_friends_gray, scaleFactor=1.05, minNeighbors=9) 

#makes rectangles based on the ones provided by the multiscale function
#makes them green with 0,255,0
for (x, y, w, h) in faces_rect: 
	cv2.rectangle(img_friends, (x, y), (x+w, y+h), (0, 255, 0), thickness=2) 

cv2.imshow('Detected faces', img_friends) 



cv2.waitKey(0)  #nessassary for some reason: https://www.geeksforgeeks.org/python-opencv-cv2-imshow-method/
cv2.destroyAllWindows() 